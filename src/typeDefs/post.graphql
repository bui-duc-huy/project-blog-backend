type Comment {
	_id: ID
	idCreator: ID
	description: String
	idLikes: [String]
	createdAt: Float
}

type Post {
	_id: ID
	idCreator: ID
	idComments: [ID]
	idLikes: [ID]
	description: String
	thumbnails: String
	createdAt: Float

	#custome fields
	creator: User
	liker: [User]
	comments: [Comment]
}

input PostInput {
	description: String
	thumbnails: String
}

input CommentInput {
	description: String
}

type Query {
	getPosts: [Post]
}

type Mutation {
	createNewPost(input: PostInput): Post @isAuthenticated
	deletePost(idPost: String): Boolean @isAuthenticated
	deleteAllPost: Boolean @checkRoles(roles: ["SUPERADMIN"])
	updatePost(idPost: String, input: PostInput): Post @isAuthenticated
	toggleLikePost(idPost: String): Boolean @isAuthenticated
	commentOnPost(idPost: String, input: CommentInput): Comment @isAuthenticated
	deleteComment(idPost: String, idComment: String): Boolean @isAuthenticated
	updateComment(idComment: String, input: CommentInput): Comment
		@isAuthenticated
	toggleLikeComment(idComment: String): Boolean @isAuthenticated
}
