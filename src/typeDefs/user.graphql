enum Gender {
	UNKNOWN
	MALE
	FEMALE
}

enum Role {
	SUPERADMIN
	ADMIN
	MEMBER
}

type User {
	_id: ID
	fullName: String
	username: String
	password: String
	role: Role
	avatar: String
	gender: Gender
	isOnline: Boolean
	createdAt: Float
}

input CreateUserInput {
	username: String
	password: String
	role: String
	gender: String
	fullName: String
}

input LoginRequest {
	username: String
	password: String
}

input UpdateUserInput {
	username: String
	password: String
	gender: String
	role: String
	fullName: String
}

type LoginResponse {
	token: String
}

type Query {
	hello: String
	getUsers: [User] @checkRoles(roles: ["ADMIN", "SUPERADMIN"])
}

type Mutation {
	createUser(input: CreateUserInput): User
	login(input: LoginRequest): LoginResponse
	updateUser(input: UpdateUserInput): User @isAuthenticated
	deleteAllMember: Boolean @checkRoles(roles: ["ADMIN", "SUPERADMIN"])
	deleteAllAdmin: Boolean @checkRoles(roles: ["SUPERADMIN"])
}
